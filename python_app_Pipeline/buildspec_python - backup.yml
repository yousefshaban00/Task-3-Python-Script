version: 0.2

#env:
  #variables:
     # key: "There are no variables"
  #parameter-store:
     # key: "There are no variables"

phases:
  install:
    #If you use the Ubuntu standard image 2.0 or later, you must specify runtime-versions.
    #If you specify runtime-versions and use an image other than Ubuntu standard image 2.0, the build fails.
    runtime-versions:
       python: 3.10

  pre_build:
    commands:
     - apt-get update
     - pip install -r python_app_Pipeline/Dockerfile_py_Pipeline/requirements.txt
     - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
     - unzip awscliv2.zip
     - sudo ./aws/install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update
   #  - REGION=us-east-1
     - REGION=$(aws ec2 describe-availability-zones --output text --query 'AvailabilityZones[0].[RegionName]')

     - AWS_ACCOUNTID=962490649366
     #- COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1–7)
    # - IMAGE_TAG=${COMMIT_HASH:=latest}
   #  - EKS_NAME= $(aws eks list-clusters --query 'clusters[0]' --output text)
     - EKS_NAME=radio-dev-ekstask1
     -  curl -o aws-iam-authenticator https://amazon-eks.s3.us-east-1.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/aws-iam-authenticator
     - chmod +x ./aws-iam-authenticator
     - mkdir -p ~/bin && cp ./aws-iam-authenticator ~/bin/aws-iam-authenticator && export PATH=~/bin:$PATH
     - curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.24.7/2022-10-31/bin/linux/amd64/kubectl
     - chmod +x kubectl
     - mv ./kubectl /usr/local/bin/kubectl
     - echo Update kubeconfig…
     - aws eks update-kubeconfig --name ${EKS_NAME} --region ${REGION}
     - kubectl version --short --client
   #  - cat ~/.aws/config
  #  - cat ~/.aws/credentials
  #   - cat ~/.kube/config
     - aws sts get-caller-identity
   #  - mkdir -p ~/.aws/
   #  - echo "[profile codebuild]" >> ~/.aws/config
  #   - echo "role_arn = arn:aws:iam::$AWS_ACCOUNT_ID:role/containerAppBuildProjectRole" >> ~/.aws/config
   #  - echo "region = us-east-1"
   #  - echo "output = json"
   #  - cat ~/.aws/config
  #  -  aws eks update-kubeconfig --name ${EKS_NAME} --region ${REGION} --role-arn arn:aws:iam::962490649366:role/containerAppBuildProjectRole
    # -  aws eks update-kubeconfig --name ${EKS_NAME} --region ${REGION} 
     - kubectl get pod
     - kubectl get svc
     - echo $IMAGE_REPO_NAME
     - echo $IMAGE_TAG
     #- echo $PASS
     - password=$(aws ssm get-parameters --region us-east-1 --names PASS --with-decryption --query Parameters[0].Value)
     - password=`echo $password | sed -e 's/^"//' -e 's/"$//'`
     - python python_app_Pipeline/test.py

     #- $IMAGE_REPO_NAME=yousefshaban/my-python-app
    # - $IMAGE_TAG=latest

  build:
    commands:
      - docker login --username yousefshaban --password ${password}
      - echo Build started on `date`
      - echo Building the Docker image...          
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG python_app_Pipeline/Dockerfile_py_Pipeline
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $IMAGE_REPO_NAME:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $IMAGE_REPO_NAME:$IMAGE_TAG
